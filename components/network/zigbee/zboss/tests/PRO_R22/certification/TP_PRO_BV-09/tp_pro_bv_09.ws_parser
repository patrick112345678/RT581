# TP-PRO-BV-08 (ZigBee Document 07-5035-07)

# gZC address (wpan.src64): aa:aa:aa:aa:aa:aa:aa:aa
# gZC short address (): 0x0000
# DUT ZR1 address (wpan.src64): 00:00:00:01:00:00:00:00
# DUT ZR2 address (wpan.src64): 00:00:00:02:00:00:00:00
# DUT ZR3 address (wpan.src64): 00:00:00:03:00:00:00:00


# >>> Initial Conditions
# (Start gZC)
wpan.cmd, Beacon Request

# 1 DUT ZR1 joins gZC. 
wpan.cmd, Beacon Request
wpan, Beacon, zbee_beacon.ext_panid, aa:aa:aa:aa:aa:aa:aa:aa, wpan.assoc_permit, True
wpan.cmd, Association Request, wpan.src64, 00:00:00:01:00:00:00:00
wpan.cmd, Association Response, wpan.src64, aa:aa:aa:aa:aa:aa:aa:aa, wpan.dst64, 00:00:00:01:00:00:00:00, wpan.assoc.status, 0x00000000, delta_time, -2
zbee_aps.zdp_cluster, Device Announcement, zbee_zdp.ext_addr, 00:00:00:01:00:00:00:00

# DUT ZR2 joins PAN with DUT ZR1.
wpan.cmd, Beacon Request
wpan, Beacon, zbee_beacon.ext_panid, aa:aa:aa:aa:aa:aa:aa:aa, wpan.src64, 00:00:00:01:00:00:00:00, wpan.assoc_permit, True
wpan.cmd, Association Request, wpan.src64, 00:00:00:02:00:00:00:00
wpan.cmd, Association Response, wpan.src64, 00:00:00:01:00:00:00:00, wpan.dst64, 00:00:00:02:00:00:00:00, wpan.assoc.status, 0x00000000, delta_time, -2
zbee_aps.zdp_cluster, Device Announcement, zbee_zdp.ext_addr, 00:00:00:02:00:00:00:00

# DUT ZR3 joins PAN with DUT ZR2.
wpan.cmd, Beacon Request
wpan, Beacon, zbee_beacon.ext_panid, aa:aa:aa:aa:aa:aa:aa:aa, wpan.src64, 00:00:00:02:00:00:00:00, wpan.assoc_permit, True
wpan.cmd, Association Request, wpan.src64, 00:00:00:03:00:00:00:00
wpan.cmd, Association Response, wpan.src64, 00:00:00:02:00:00:00:00, wpan.dst64, 00:00:00:03:00:00:00:00, wpan.assoc.status, 0x00000000, delta_time, -2
zbee_aps.zdp_cluster, Device Announcement, zbee_zdp.ext_addr, 00:00:00:03:00:00:00:00

# 2 Register end point of 0xf0 and 0x01 in gZC, DUT ZR1, DUT ZR2 and DUT ZR3.
# 3 gZC initiated NLME-ROUTE DISCOVERY.Request
# Dst Addr mode =0x00 - No destination address
# DstAddr=0xFFFC
# Radius=0x03 - (may be assigned to be network broadcast radius)
# NoRouteCache=0x0.
# (We use another method of discovering)
zbee_nwk.cmd.id, Route Request, wpan.src64, 00:00:00:03:00:00:00:00, zbee_nwk.ext_dst, False, zbee_nwk.dst, 0xfffc, zbee_nwk.cmd.route.dest, 0x0000

# >>> Test Procedure

# 1 DUT ZR3 issues the Buffer Test Request to gZC
# Dst address mode=0x02
# Dst address=0x0000
# Dst end point=0xF0
# Source endpoint=0x01
# Tx option=0x00
# 1.1) DUT ZR3 shall issues the route record before sending the Buffer test
# request.
# 1.2) DUT ZR3 over the air packet, the relay count field of route record shall set
# as 0.
# 1.3) DUT gZR3 over the air packet, the source address of the route record
# shall be gZR3 address.
# 1.4) The destination address of the route record shall be gZC address.
zbee_nwk.cmd.id, Route Record, wpan.src64, 00:00:00:03:00:00:00:00, wpan.dst64, 00:00:00:02:00:00:00:00, zbee_nwk.src64, 00:00:00:03:00:00:00:00, zbee_nwk.dst, 0x0000, zbee_nwk.cmd.relay_count, 0

# 1.5) DUT ZR2 shall increment the relay count field record by 1 and its short
# address appends the relay list.
# 1.6) DUT ZR1 shall append its network address in the relay list and increase
# the relay count.
zbee_nwk.cmd.id, Route Record, wpan.src64, 00:00:00:02:00:00:00:00, wpan.dst64, 00:00:00:01:00:00:00:00, zbee_nwk.src64, 00:00:00:03:00:00:00:00, zbee_nwk.dst, 0x0000, zbee_nwk.cmd.relay_count, 1

# 1.7) DUT ZR1 shall unicast the route record frame to gZC.
zbee_nwk.cmd.id, Route Record, wpan.src64, 00:00:00:01:00:00:00:00, wpan.dst64, aa:aa:aa:aa:aa:aa:aa:aa, zbee_nwk.src64, 00:00:00:03:00:00:00:00, zbee_nwk.cmd.relay_count, 2

# 1.8) DUT ZR3 shall send the Buffer test request to gZC through DUT ZR2 and
# gZR1.
zbee_aps.t2.cluster, Buffer Test Request, zbee_nwk.src64, 00:00:00:03:00:00:00:00, zbee_nwk.dst64, aa:aa:aa:aa:aa:aa:aa:aa, wpan.src64, 00:00:00:03:00:00:00:00, wpan.dst64, 00:00:00:02:00:00:00:00, wpan.dst_addr_mode, 2, zbee_nwk.dst, 0x0000, zbee_aps.dst, f0, zbee_aps.src, 01
zbee_aps.t2.cluster, Buffer Test Request, zbee_nwk.src64, 00:00:00:03:00:00:00:00, zbee_nwk.dst64, aa:aa:aa:aa:aa:aa:aa:aa, wpan.src64, 00:00:00:02:00:00:00:00, wpan.dst64, 00:00:00:01:00:00:00:00
zbee_aps.t2.cluster, Buffer Test Request, zbee_nwk.src64, 00:00:00:03:00:00:00:00, zbee_nwk.dst64, aa:aa:aa:aa:aa:aa:aa:aa, wpan.src64, 00:00:00:01:00:00:00:00, wpan.dst64, aa:aa:aa:aa:aa:aa:aa:aa

# 1.9) gZC shall receive the Buffer test request and respond with a Buffer test
# response using source routing
zbee_aps.t2.cluster, Buffer Test Response, zbee_nwk.src64, aa:aa:aa:aa:aa:aa:aa:aa, zbee_nwk.dst64, 00:00:00:03:00:00:00:00, wpan.src64, aa:aa:aa:aa:aa:aa:aa:aa, wpan.dst64, 00:00:00:01:00:00:00:00, zbee_nwk.src_route, True
zbee_aps.t2.cluster, Buffer Test Response, zbee_nwk.src64, aa:aa:aa:aa:aa:aa:aa:aa, zbee_nwk.dst64, 00:00:00:03:00:00:00:00, wpan.src64, 00:00:00:01:00:00:00:00, wpan.dst64, 00:00:00:02:00:00:00:00, zbee_nwk.src_route, True
zbee_aps.t2.cluster, Buffer Test Response, zbee_nwk.src64, aa:aa:aa:aa:aa:aa:aa:aa, zbee_nwk.dst64, 00:00:00:03:00:00:00:00, wpan.src64, 00:00:00:02:00:00:00:00, wpan.dst64, 00:00:00:03:00:00:00:00

# 2 DUT ZR3 issues the Buffer test request to gZC.
# 2.10) DUT ZR3 does not issue the route record before sending the Buffer test
# request.
zbee_nwk.cmd.id, Route Record, wpan.src64, 00:00:00:03:00:00:00:00, parallel, y, exclude, y

# 2.11) DUT ZR3 shall send the Buffer test request to gZC through DUT ZR2 and
# gZR1.
zbee_aps.t2.cluster, Buffer Test Request, zbee_nwk.src64, 00:00:00:03:00:00:00:00, zbee_nwk.dst64, aa:aa:aa:aa:aa:aa:aa:aa, wpan.src64, 00:00:00:03:00:00:00:00, wpan.dst64, 00:00:00:02:00:00:00:00, wpan.dst_addr_mode, 2, zbee_nwk.dst, 0x0000, zbee_aps.dst, f0, zbee_aps.src, 01
zbee_aps.t2.cluster, Buffer Test Request, zbee_nwk.src64, 00:00:00:03:00:00:00:00, zbee_nwk.dst64, aa:aa:aa:aa:aa:aa:aa:aa, wpan.src64, 00:00:00:02:00:00:00:00, wpan.dst64, 00:00:00:01:00:00:00:00
zbee_aps.t2.cluster, Buffer Test Request, zbee_nwk.src64, 00:00:00:03:00:00:00:00, zbee_nwk.dst64, aa:aa:aa:aa:aa:aa:aa:aa, wpan.src64, 00:00:00:01:00:00:00:00, wpan.dst64, aa:aa:aa:aa:aa:aa:aa:aa

# 2.12) gZC shall receive the Buffer test request and respond with a Buffer test
# response using source routing
zbee_aps.t2.cluster, Buffer Test Response, zbee_nwk.src64, aa:aa:aa:aa:aa:aa:aa:aa, zbee_nwk.dst64, 00:00:00:03:00:00:00:00, wpan.src64, aa:aa:aa:aa:aa:aa:aa:aa, wpan.dst64, 00:00:00:01:00:00:00:00, zbee_nwk.src_route, True
zbee_aps.t2.cluster, Buffer Test Response, zbee_nwk.src64, aa:aa:aa:aa:aa:aa:aa:aa, zbee_nwk.dst64, 00:00:00:03:00:00:00:00, wpan.src64, 00:00:00:01:00:00:00:00, wpan.dst64, 00:00:00:02:00:00:00:00, zbee_nwk.src_route, True
zbee_aps.t2.cluster, Buffer Test Response, zbee_nwk.src64, aa:aa:aa:aa:aa:aa:aa:aa, zbee_nwk.dst64, 00:00:00:03:00:00:00:00, wpan.src64, 00:00:00:02:00:00:00:00, wpan.dst64, 00:00:00:03:00:00:00:00
