# TP-PRO-BV-12 (ZigBee Document 07-5035-07)

# DUT ZC 
#    PAN ID = 0x1aaa
#    Short Address = 0x0000
#    Long Address = aa:aa:aa:aa:aa:aa:aa:aa
# gZR1 
#    Long Address = 00:00:00:01:00:00:00:00
# gZED
#    Long Address = 00:00:00:00:00:00:00:01
#    RxOnWhenIdle = 0

# >>> Initial Conditions

# 1 Reset DUT ZC
wpan.cmd, Beacon Request

# 2 Set DUT ZC, under target stack profile, gZC as co-coordinator starts a PAN with a
# random value (within the range 0x1 to 0x3FFF).
# 3 gZED (RxOnWhenIdle = FALSE) joins DUT ZC.
wpan.cmd, Beacon Request
wpan.frame_type, Beacon, zbee_beacon.ext_panid, aa:aa:aa:aa:aa:aa:aa:aa, wpan.src16, 0x00000000, wpan.assoc_permit, True
wpan.cmd, Association Request, wpan.src64, 00:00:00:00:00:00:00:01
wpan.cmd, Association Response, wpan.src64, aa:aa:aa:aa:aa:aa:aa:aa, wpan.dst64, 00:00:00:00:00:00:00:01, wpan.assoc.status, 0x00000000, delta_time, -2
zbee_aps.zdp_cluster, Device Announcement, zbee_nwk.dst, 0x0000fffd, zbee_zdp.ext_addr, 00:00:00:00:00:00:00:01, zbee_zdp.cinfo.power, False

# 4 Make sure that link message is broadcasting to neighbouring routers to
# communicate their incoming link cost to each other for every 15sec.
zbee_nwk.cmd.id, Link Status, wpan.src64, aa:aa:aa:aa:aa:aa:aa:aa, zbee_nwk.dst, 0x0000fffc, delta_time, -15.5, count, -1, parallel, y

# 5 Per the Test Profile, gZED shall be polling every 2 seconds.
wpan.cmd, Data Request, wpan.src64, 00:00:00:00:00:00:00:01, wpan.dst64, aa:aa:aa:aa:aa:aa:aa:aa, delta_time, -2.5, count, -1, parallel, y

# >>> Test Procedure

# 1 gZR1 performs startup procedure and joins the PAN network.
# 1.1) gZR1 shall issues a MLME_Beacon Request MAC command frame,
# and DUT ZC shall respond with beacon.
wpan.cmd, Beacon Request
wpan.frame_type, Beacon, zbee_beacon.ext_panid, aa:aa:aa:aa:aa:aa:aa:aa, wpan.src16, 0x00000000, wpan.assoc_permit, True

# 1.2) Based on the active scan result gZR1 is able to complete the MAC
# association sequence with DUT ZC
wpan.cmd, Association Request, wpan.src64, 00:00:00:01:00:00:00:00
wpan.cmd, Association Response, wpan.src64, aa:aa:aa:aa:aa:aa:aa:aa, wpan.dst64, 00:00:00:01:00:00:00:00, wpan.assoc.status, 0x00000000, delta_time, -2
zbee_aps.zdp_cluster, Device Announcement, zbee_nwk.dst, 0x0000fffd, zbee_zdp.ext_addr, 00:00:00:01:00:00:00:00

# 1.3) Using TestProfile 3 gZR1 broadcasts a device announcement with
# short address the same as gZED.
zbee_aps.zdp_cluster, Device Announcement, zbee_nwk.dst, 0x0000fffd, zbee_zdp.ext_addr, 00:00:00:01:00:00:00:00

# 1.4) DUT ZC shall broadcast a Network Status command with status code
# address conflict (0x0d).
zbee_nwk.cmd.id, Network Status, zbee_nwk.cmd.status, Address Conflict, wpan.src64, aa:aa:aa:aa:aa:aa:aa:aa

# 2 gZR1 changes its address internally and sends out an End Dev Annouce
# with same short address as gZED.
# 2.5) gZR1 changes its short address.
# 2.6) gZR1 broadcasts a device announcement with new short address
zbee_aps.zdp_cluster, Device Announcement, zbee_nwk.dst, 0x0000fffd, zbee_zdp.ext_addr, 00:00:00:01:00:00:00:00

# 2.7) DUT ZC shall send an unsolicited Rejoin Response to tell gZED to
# change its short address.
zbee_nwk.cmd.id, Rejoin Request, wpan.src64, 00:00:00:00:00:00:00:01, parallel, y, exclude, y
zbee_nwk.cmd.id, Rejoin Response, zbee_nwk.src64, aa:aa:aa:aa:aa:aa:aa:aa, zbee_nwk.dst64, 00:00:00:00:00:00:00:01, zbee_nwk.cmd.rejoin_status, Success

# 2.8) gZED changes its short address.
zbee_aps.zdp_cluster, Device Announcement, zbee_nwk.dst, 0x0000fffd, zbee_zdp.ext_addr, 00:00:00:00:00:00:00:01
