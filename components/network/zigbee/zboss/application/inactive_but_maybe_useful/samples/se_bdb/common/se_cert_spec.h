/* ZBOSS Zigbee software protocol stack
 *
 * Copyright (c) 2012-2020 DSR Corporation, Denver CO, USA.
 * www.dsr-zboss.com
 * www.dsr-corporation.com
 * All rights reserved.
 *
 * This is unpublished proprietary source code of DSR Corporation
 * The copyright notice does not evidence any actual or intended
 * publication of such source code.
 *
 * ZBOSS is a registered trademark of Data Storage Research LLC d/b/a DSR
 * Corporation
 *
 * Commercial Usage
 * Licensees holding valid DSR Commercial licenses may use
 * this file in accordance with the DSR Commercial License
 * Agreement provided with the Software or, alternatively, in accordance
 * with the terms contained in a written agreement between you and
 * DSR.
 */
/* PURPOSE: Cerificates for SE samples.
*/

#ifndef SE_CERT_H
#define SE_CERT_H 1

#if defined SE_CRYPTOSUITE_1 && defined SE_CRYPTOSUITE_2
#error Please define only one SE_CRYPTOSUITE_X or use another se_cert.h file
#endif

#ifdef SE_CRYPTOSUITE_1
/** Public key of CERTICOM's Test Certifications Authority */
zb_uint8_t ca_public_key_cs1[22] = {0x02, 0x00, 0xFD, 0xE8, 0xA7, 0xF3, 0xD1, 0x08,
                                    0x42, 0x24, 0x96, 0x2A, 0x4E, 0x7C, 0x54, 0xE6,
                                    0x9A, 0xC3, 0xF0, 0x4D, 0xA6, 0xB8
                                   };
#endif

#ifdef SE_CRYPTOSUITE_2
/** Public key of CERTICOM's Test Certifications Authority */
zb_uint8_t ca_public_key_cs2[37] = {0x02, 0x07, 0xa4, 0x45, 0x02, 0x2d, 0x9f, 0x39,
                                    0xf4, 0x9b, 0xdc, 0x38, 0x38, 0x00, 0x26, 0xa2,
                                    0x7a, 0x9e, 0x0a, 0x17, 0x99, 0x31, 0x3a, 0xb2,
                                    0x8c, 0x5c, 0x1a, 0x1c, 0x6b, 0x60, 0x51, 0x54,
                                    0xdb, 0x1d, 0xff, 0x67, 0x52
                                   };
#endif

/* ---------------------------- ESI device ----------------------------------- */

#ifdef SE_CRYPTOSUITE_1
#define ESI_DEV_ADDR     {0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}

zb_uint8_t esi_certificate_cs1[48] = {0x03, 0x04, 0x5F, 0xDF, 0xC8, 0xD8, 0x5F, 0xFB,
                                      0x8B, 0x39, 0x93, 0xCB, 0x72, 0xDD, 0xCA, 0xA5,
                                      0x5F, 0x00, 0xB3, 0xE8, 0x7D, 0x6D, 0x00, 0x00,
                                      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x54, 0x45,
                                      0x53, 0x54, 0x53, 0x45, 0x43, 0x41, 0x01, 0x09,
                                      0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                     };

zb_uint8_t esi_private_key_cs1[21] = {0x00, 0xB8, 0xA9, 0x00, 0xFC, 0xAD, 0xEB, 0xAB,
                                      0xBF, 0xA3, 0x83, 0xB5, 0x40, 0xFC, 0xE9, 0xED,
                                      0x43, 0x83, 0x95, 0xEA, 0xA7
                                     };
#endif

#ifdef SE_CRYPTOSUITE_2
#define ESI_DEV_ADDR   {0x11, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0b, 0x0a}

zb_uint8_t esi_certificate_cs2[74] = {0x00, 0x26, 0x22, 0xA5, 0x05, 0xE8, 0x93, 0x8F,
                                      0x27, 0x0D, 0x08, 0x11, 0x12, 0x13, 0x14, 0x15,
                                      0x16, 0x17, 0x18, 0x00, 0x52, 0x92, 0xA3, 0x5B,
                                      0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x0B, 0x0C, 0x0D,
                                      0x0E, 0x0F, 0x10, 0x11, 0x88, 0x03, 0x03, 0xB4,
                                      0xE9, 0xDC, 0x54, 0x3A, 0x64, 0x33, 0x3C, 0x98,
                                      0x23, 0x08, 0x02, 0x2B, 0x54, 0xE6, 0x7E, 0x2F,
                                      0x15, 0xF5, 0x32, 0x55, 0x1B, 0x0A, 0x11, 0xE2,
                                      0xE2, 0xC1, 0xC1, 0xD3, 0x09, 0x7A, 0x43, 0x24,
                                      0xE7, 0xED
                                     };

zb_uint8_t esi_private_key_cs2[36] = {0x01, 0x51, 0xCD, 0x0D, 0xBC, 0xB8, 0x04, 0x74,
                                      0xBF, 0x7A, 0xC9, 0xFE, 0xEB, 0xE3, 0x9C, 0x7A,
                                      0x32, 0xA6, 0x35, 0x18, 0x93, 0x8F, 0xCA, 0x97,
                                      0x54, 0xAA, 0xE1, 0x32, 0xBC, 0x9C, 0x73, 0xBE,
                                      0x94, 0xA7, 0xE1, 0xBE
                                     };
#endif
/* ---------------------------- IHD device ----------------------------------- */
#ifdef SE_CRYPTOSUITE_1
#define IHD_DEV_ADDR {0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}

zb_uint8_t ihd_certificate_cs1[48] = {0x02, 0x06, 0x15, 0xE0, 0x7D, 0x30, 0xEC, 0xA2,
                                      0xDA, 0xD5, 0x80, 0x02, 0xE6, 0x67, 0xD9, 0x4B,
                                      0xC1, 0xB4, 0x22, 0x39, 0x83, 0x07, 0x00, 0x00,
                                      0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x45,
                                      0x53, 0x54, 0x53, 0x45, 0x43, 0x41, 0x01, 0x09,
                                      0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                     };

zb_uint8_t ihd_private_key_cs1[21] = {0x01, 0xE9, 0xDD, 0xB5, 0x58, 0x0C, 0xF7, 0x2E,
                                      0xCE, 0x7F, 0x21, 0x5F, 0x0A, 0xE5, 0x94, 0xE4,
                                      0x8D, 0xF3, 0xE7, 0xFE, 0xE8
                                     };
#endif

#ifdef SE_CRYPTOSUITE_2
#define IHD_DEV_ADDR {0x12, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0b, 0x0a}

zb_uint8_t ihd_certificate_cs2[74] = {0x00, 0x84, 0xA9, 0x33, 0xB3, 0x7F, 0x01, 0x8D,
                                      0xEC, 0x0D, 0x08, 0x11, 0x12, 0x13, 0x14, 0x15,
                                      0x16, 0x17, 0x18, 0x00, 0x52, 0x92, 0xA3, 0x8A,
                                      0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x0B, 0x0C, 0x0D,
                                      0x0E, 0x0F, 0x10, 0x12, 0x88, 0x03, 0x07, 0x62,
                                      0x77, 0xE2, 0xF7, 0xE2, 0x25, 0x2B, 0x16, 0xA0,
                                      0xE9, 0x2B, 0x6E, 0x87, 0x71, 0xBB, 0x3F, 0x20,
                                      0x79, 0x46, 0xCB, 0xD4, 0xA4, 0x5D, 0x9A, 0x9D,
                                      0xF6, 0xED, 0xAB, 0x8C, 0x79, 0x6A, 0x48, 0xE8,
                                      0x9D, 0xEC
                                     };

zb_uint8_t ihd_private_key_cs2[36] = {0x00, 0xF2, 0x56, 0x1A, 0xDB, 0x39, 0xEF, 0x49,
                                      0xC1, 0xD6, 0x2E, 0xF5, 0x18, 0x6C, 0x6E, 0x0C,
                                      0x15, 0x8A, 0x5A, 0x45, 0xBF, 0xCE, 0x38, 0x66,
                                      0x09, 0x31, 0xAC, 0xC3, 0x69, 0x45, 0x92, 0xD5,
                                      0xAC, 0xDE, 0x90, 0x06
                                     };
#endif
/* ---------------------------- Electric Metering device ----------------------------------- */
#ifdef SE_CRYPTOSUITE_1
#define EL_METERING_DEV_ADDR {0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}

zb_uint8_t el_metering_certificate_cs1[48] = {0x02, 0x06, 0x15, 0xE0, 0x7D, 0x30, 0xEC, 0xA2,
                                              0xDA, 0xD5, 0x80, 0x02, 0xE6, 0x67, 0xD9, 0x4B,
                                              0xC1, 0xB4, 0x22, 0x39, 0x83, 0x07, 0x00, 0x00,
                                              0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x45,
                                              0x53, 0x54, 0x53, 0x45, 0x43, 0x41, 0x01, 0x09,
                                              0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                             };

zb_uint8_t el_metering_private_key_cs1[21] = {0x01, 0xE9, 0xDD, 0xB5, 0x58, 0x0C, 0xF7, 0x2E,
                                              0xCE, 0x7F, 0x21, 0x5F, 0x0A, 0xE5, 0x94, 0xE4,
                                              0x8D, 0xF3, 0xE7, 0xFE, 0xE8
                                             };
#endif

#ifdef SE_CRYPTOSUITE_2
#define EL_METERING_DEV_ADDR {0x12, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0b, 0x0a}

zb_uint8_t el_metering_certificate_cs2[74] = {0x00, 0x84, 0xA9, 0x33, 0xB3, 0x7F, 0x01, 0x8D,
                                              0xEC, 0x0D, 0x08, 0x11, 0x12, 0x13, 0x14, 0x15,
                                              0x16, 0x17, 0x18, 0x00, 0x52, 0x92, 0xA3, 0x8A,
                                              0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x0B, 0x0C, 0x0D,
                                              0x0E, 0x0F, 0x10, 0x12, 0x88, 0x03, 0x07, 0x62,
                                              0x77, 0xE2, 0xF7, 0xE2, 0x25, 0x2B, 0x16, 0xA0,
                                              0xE9, 0x2B, 0x6E, 0x87, 0x71, 0xBB, 0x3F, 0x20,
                                              0x79, 0x46, 0xCB, 0xD4, 0xA4, 0x5D, 0x9A, 0x9D,
                                              0xF6, 0xED, 0xAB, 0x8C, 0x79, 0x6A, 0x48, 0xE8,
                                              0x9D, 0xEC
                                             };

zb_uint8_t el_metering_private_key_cs2[36] = {0x00, 0xF2, 0x56, 0x1A, 0xDB, 0x39, 0xEF, 0x49,
                                              0xC1, 0xD6, 0x2E, 0xF5, 0x18, 0x6C, 0x6E, 0x0C,
                                              0x15, 0x8A, 0x5A, 0x45, 0xBF, 0xCE, 0x38, 0x66,
                                              0x09, 0x31, 0xAC, 0xC3, 0x69, 0x45, 0x92, 0xD5,
                                              0xAC, 0xDE, 0x90, 0x06
                                             };
#endif
/* ---------------------------- Gas Metering device ----------------------------------- */
#ifdef SE_CRYPTOSUITE_1
#define GAS_METERING_DEV_ADDR {0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}

zb_uint8_t gas_metering_certificate_cs1[48] = {0x02, 0x06, 0x15, 0xE0, 0x7D, 0x30, 0xEC, 0xA2,
                                               0xDA, 0xD5, 0x80, 0x02, 0xE6, 0x67, 0xD9, 0x4B,
                                               0xC1, 0xB4, 0x22, 0x39, 0x83, 0x07, 0x00, 0x00,
                                               0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x45,
                                               0x53, 0x54, 0x53, 0x45, 0x43, 0x41, 0x01, 0x09,
                                               0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                              };

zb_uint8_t gas_metering_private_key_cs1[21] = {0x01, 0xE9, 0xDD, 0xB5, 0x58, 0x0C, 0xF7, 0x2E,
                                               0xCE, 0x7F, 0x21, 0x5F, 0x0A, 0xE5, 0x94, 0xE4,
                                               0x8D, 0xF3, 0xE7, 0xFE, 0xE8
                                              };
#endif

#ifdef SE_CRYPTOSUITE_2
#define GAS_METERING_DEV_ADDR {0x12, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0b, 0x0a}

zb_uint8_t gas_metering_certificate_cs2[74] = {0x00, 0x84, 0xA9, 0x33, 0xB3, 0x7F, 0x01, 0x8D,
                                               0xEC, 0x0D, 0x08, 0x11, 0x12, 0x13, 0x14, 0x15,
                                               0x16, 0x17, 0x18, 0x00, 0x52, 0x92, 0xA3, 0x8A,
                                               0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x0B, 0x0C, 0x0D,
                                               0x0E, 0x0F, 0x10, 0x12, 0x88, 0x03, 0x07, 0x62,
                                               0x77, 0xE2, 0xF7, 0xE2, 0x25, 0x2B, 0x16, 0xA0,
                                               0xE9, 0x2B, 0x6E, 0x87, 0x71, 0xBB, 0x3F, 0x20,
                                               0x79, 0x46, 0xCB, 0xD4, 0xA4, 0x5D, 0x9A, 0x9D,
                                               0xF6, 0xED, 0xAB, 0x8C, 0x79, 0x6A, 0x48, 0xE8,
                                               0x9D, 0xEC
                                              };

zb_uint8_t gas_metering_private_key_cs2[36] = {0x00, 0xF2, 0x56, 0x1A, 0xDB, 0x39, 0xEF, 0x49,
                                               0xC1, 0xD6, 0x2E, 0xF5, 0x18, 0x6C, 0x6E, 0x0C,
                                               0x15, 0x8A, 0x5A, 0x45, 0xBF, 0xCE, 0x38, 0x66,
                                               0x09, 0x31, 0xAC, 0xC3, 0x69, 0x45, 0x92, 0xD5,
                                               0xAC, 0xDE, 0x90, 0x06
                                              };
#endif

/* ------------------------Programmable Thermostat device-------------------- */
#ifdef SE_CRYPTOSUITE_1
#define PCT_DEV_ADDR {0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}

zb_uint8_t pct_certificate_cs1[48] = {0x02, 0x06, 0x15, 0xE0, 0x7D, 0x30, 0xEC, 0xA2,
                                      0xDA, 0xD5, 0x80, 0x02, 0xE6, 0x67, 0xD9, 0x4B,
                                      0xC1, 0xB4, 0x22, 0x39, 0x83, 0x07, 0x00, 0x00,
                                      0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x54, 0x45,
                                      0x53, 0x54, 0x53, 0x45, 0x43, 0x41, 0x01, 0x09,
                                      0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                     };

zb_uint8_t pct_private_key_cs1[21] = {0x01, 0xE9, 0xDD, 0xB5, 0x58, 0x0C, 0xF7, 0x2E,
                                      0xCE, 0x7F, 0x21, 0x5F, 0x0A, 0xE5, 0x94, 0xE4,
                                      0x8D, 0xF3, 0xE7, 0xFE, 0xE8
                                     };
#endif

#ifdef SE_CRYPTOSUITE_2
#define PCT_DEV_ADDR {0x12, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0b, 0x0a}

zb_uint8_t pct_certificate_cs2[74] = {0x00, 0x84, 0xA9, 0x33, 0xB3, 0x7F, 0x01, 0x8D,
                                      0xEC, 0x0D, 0x08, 0x11, 0x12, 0x13, 0x14, 0x15,
                                      0x16, 0x17, 0x18, 0x00, 0x52, 0x92, 0xA3, 0x8A,
                                      0xFF, 0xFF, 0xFF, 0xFF, 0x0A, 0x0B, 0x0C, 0x0D,
                                      0x0E, 0x0F, 0x10, 0x12, 0x88, 0x03, 0x07, 0x62,
                                      0x77, 0xE2, 0xF7, 0xE2, 0x25, 0x2B, 0x16, 0xA0,
                                      0xE9, 0x2B, 0x6E, 0x87, 0x71, 0xBB, 0x3F, 0x20,
                                      0x79, 0x46, 0xCB, 0xD4, 0xA4, 0x5D, 0x9A, 0x9D,
                                      0xF6, 0xED, 0xAB, 0x8C, 0x79, 0x6A, 0x48, 0xE8,
                                      0x9D, 0xEC
                                     };

zb_uint8_t pct_private_key_cs2[36] = {0x00, 0xF2, 0x56, 0x1A, 0xDB, 0x39, 0xEF, 0x49,
                                      0xC1, 0xD6, 0x2E, 0xF5, 0x18, 0x6C, 0x6E, 0x0C,
                                      0x15, 0x8A, 0x5A, 0x45, 0xBF, 0xCE, 0x38, 0x66,
                                      0x09, 0x31, 0xAC, 0xC3, 0x69, 0x45, 0x92, 0xD5,
                                      0xAC, 0xDE, 0x90, 0x06
                                     };
#endif

#endif /* SE_CERT_H */
