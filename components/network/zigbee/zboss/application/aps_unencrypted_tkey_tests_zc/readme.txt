    ZBOSS Zigbee software protocol stack

    Copyright (c) 2012-2020 DSR Corporation, Denver CO, USA.
    www.dsr-zboss.com
    www.dsr-corporation.com
    All rights reserved.

    This is unpublished proprietary source code of DSR Corporation
    The copyright notice does not evidence any actual or intended
    publication of such source code.

    ZBOSS is a registered trademark of Data Storage Research LLC d/b/a DSR
    Corporation

    Commercial Usage
    Licensees holding valid DSR Commercial licenses may use
    this file in accordance with the DSR Commercial License
    Agreement provided with the Software or, alternatively, in accordance
    with the terms contained in a written agreement between you and
    DSR.


APS-unencrypted Transport Key Coordinator sample
=================================================

This application is a Zigbee APS-unencrypted Transport Key Coordinator device which is implemented using BDB API.
Default operational channel is set by APS_UNENCRYPTED_TKEY_TESTS_CHANNEL_MASK.

Usage:

Upload a APS-unencrypted Transport Key Coordinator binary to your Zigbee device. After powering it on the first time,
a Coordinator forms a ZB network. On start up the Coordinator opens the network for 180 sec,
any device joining is allowed during this period. After power restarting the device, existing ZB network parameters are used,
the same network exists. Network can be reformed via erasing NVARM at start.

In default mode coordinator joins devices with APS_unencrypted Tranport Key. If some device requires APS-unencrypted
Transport Key Coordinator should be switch to this mode by zb_enable_transport_key_aps_encryption() API call.
zb_disable_transport_key_aps_encryption() API call set coordinator to its default mode back.
The current state of Transport Key APS encryption can be get by zb_is_transport_key_aps_encryption_enabled() API call.

The application implements some additional functionality. The coordinator may leave the device, which was joined
without APS-encrypted Transport Key. Also it can send dummy APS commands to these devices.


Nordic nRF52840 HAL configuration
-----------------------------------

The next events can be generated by the buttons.

1.Erase device NVRAM at start by holding Button 3, when the device is powered on.
2.Toggle APS Transport key encryption for the joiners by pressing Button 1.
3.Send leave to the device which was joined with APS-unencrypted Transport Key by pressing Button 2.
4.Send APS dummy packets to the devices which were joined with APS-unencrypted Transport Key by pressing Button 3 and Button 4.

Also the application implements LED indication for the next events.

1.LEDs 1 and 2 indicate two APS-unencrypted Transport key joiners in the network.
2.LEDs 3 and 4 indicate short one-second blink, when the coordinator receives an APS ack to the unicasted dummy APS packet to the
  two APS-unencrypted Transport key joiners in the network. These unicasts are sent via presing buttons 3 and 4.
